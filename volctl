#!/bin/sh -e

# ALSA
alsa_get(){
	if ( amixer get Master | grep -q -e "\[on\]" ); then
		amixer get Master | grep -o -e "[0-9]*%" | cut -f1 -d%
	else
		echo "off"
	fi
}

alsa_set(){
	amixer -q set Master "$1"
}

# PULSEAUDIO
pulse_get(){
	status="`pactl list | grep -A15 'Sink #0'`"
	if ( echo "$status" | grep -q -e "Muted: yes" ); then
		echo "off"
	else
		echo "$status" | grep -o -e '[0-9]*%' | head -n 1 | cut -f1 -d%
	fi
}

pulse_set(){
	value=$1
	if [ "$value" == "mute" ]; then
		pactl set-sink-mute 0 1
	elif [ "$value" == "unmute" ]; then
		pactl set-sink-mute 0 0
	else
		pactl set-sink-volume 0 $value
	fi
}

# GENERIC
notify(){
	if [ ! -z "$DISPLAY" ] && ( which notify-send >/dev/null ); then
		notify-send -i "audio-volume-medium" -u low "$1"
	else
		echo "$1"
	fi
}

# Backend selection
if ( which pactl >/dev/null && pidof pulseaudio >/dev/null ); then
	sndsys=pulse
elif ( which amixer >/dev/null ); then
	sndsys=alsa
else
	notify "No supported audio control backend found"
fi

# Main volume control logic
case $1 in
	mute)
		"$sndsys"_set mute
		#notify "Sound muted"
	;;
	unmute)
		"$sndsys"_set unmute
		#notify "Volume `"$sndsys"_get`%"
	;;
	*)
		if [ -z "$1" ]; then
			vol=`"$sndsys"_get`
			if [ "$vol" == "off" ]; then
				notify "Sound muted"
			else
				notify "Volume $vol%"
			fi
		else
			cmd="$1"
			if [ -z "$cmd" ]; then
				notify "Missing argument: 'volctl set (+|-)VALUE'"
				exit 1
			fi
			if [ ${cmd:0:1} == "+" ] || [ ${cmd:0:1} == "-" ]; then
				new=$((`"$sndsys"_get`$cmd))
			else
				new=$cmd
			fi
			[ $new -gt 100 ] && new=100
			[ $new -lt 0 ] && new=0
			"$sndsys"_set $new%
		fi
	;;
esac

